# This GitHub Actions workflow builds and optionally pushes a Docker image for a Java Spring Boot project.
# It supports configurable inputs for image name, tag, registry, Maven arguments, and Java version.

name: Build and Push Docker Image

on:
  # Allows this workflow to be called by other workflows with specific inputs.
  workflow_call:
    inputs:
      image_name:
        description: 'The name of the Docker image'
        required: false
        type: string
      image_tag:
        description: 'The tag for the Docker image'
        required: false
        type: string
      registry:
        description: 'The container registry URL'
        required: false
        type: string
        default: 'docker.io'
      maven_args:
        description: 'The Maven goals to execute'
        required: false
        type: string
        default: ''
      context_path:
        description: 'The Docker context path'
        required: false
        type: string
        default: '.'
      push:
        description: 'Whether to push the Docker image to the registry'
        required: false
        type: boolean
        default: true
      java_version:
        description: 'The Java version to use for the build'
        required: false
        type: string
        default: '17'

jobs:
  build-and-push:
    # Specifies the environment where the job will run.
    runs-on: ubuntu-latest

    steps:
      # Step to check out the repository code.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to set up the Java Development Kit (JDK) with caching for Maven dependencies.
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java_version }}
          distribution: zulu
          cache: maven

      # Step to execute Maven build if Maven arguments are provided.
      - name: Maven Build
        id: maven_build
        if: ${{ inputs.maven_args != '' }}
        run: |
          mvn ${{ inputs.maven_args }}

      # Step to extract Maven artifact details (groupId, artifactId, version) from the `pom.xml`.
      - name: Extract pom details
        id: extract-info
        uses: andreacomo/maven-gav-extractor@v2.0.1
        with:
          pom-location: ${{ inputs.context_path}}/pom.xml

      # Step to set the Docker image name and tag based on inputs or extracted Maven details.
      - name: Set image name and tag
        id: set-image-name
        run: |
          if [ "${{ inputs.image_name }}" = "" ]; then
              echo "image_name=${{ steps.extract-info.outputs.artifact-id }}" >> $GITHUB_ENV
          else
              echo "image_name=${{ inputs.image_name }}" >> $GITHUB_ENV
          fi
          
          if [ "${{ inputs.image_tag }}" = "" ]; then
              echo "image_tag=${{ steps.extract-info.outputs.version }}" >> $GITHUB_ENV
          else
              echo "image_tag=${{ inputs.image_tag }}" >> $GITHUB_ENV
          fi

      # Step to log in to the container registry using credentials stored in GitHub Secrets.
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_API_TOKEN }}

      # Step to extract metadata (tags, labels) for the Docker image.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.registry}}/${{ env.image_name }}

      # Step to convert repository owner and image name to lowercase for consistency.
      - name: convert values to lowercase
        id: lower-repo-owner
        run: |
          echo "githubowner=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_ENV
          echo "image_name=$(echo ${{ env.image_name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Step to build and optionally push the Docker image to the specified registry.
      - name: Build and push Docker image
        id: push-image
        uses: docker/build-push-action@v6.15.0
        with:
          context: ${{ inputs.context_path}}
          file: ${{ inputs.context_path}}/Dockerfile
          push: ${{ inputs.push}}
          tags: ${{ inputs.registry }}/${{ env.githubowner }}/${{ env.image_name}}:${{ env.image_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PROJECT_JAR_NAME=${{  steps.extract-info.outputs.artifact-id }}-${{ steps.extract-info.outputs.version }}
            API_WAR_NAME=${{  steps.extract-info.outputs.artifact-id }}
            PROJECT_JAR_VERSION=${{ steps.extract-info.outputs.version }}